'''
1. Отсортируйте по убыванию методом пузырька одномерный целочисленный массив, заданный случайными числами на промежутке [-100; 100).
Выведите на экран исходный и отсортированный массивы.
Примечания:
a. алгоритм сортировки должен быть в виде функции, которая принимает на вход массив данных,
b. постарайтесь сделать алгоритм умнее, но помните, что у вас должна остаться сортировка пузырьком.
Улучшенные версии сортировки, например, расчёской, шейкерная и другие в зачёт не идут.
'''

import random


def my_bubble_sort(data: list) -> list:

    # вариант сортировки из урока
    # n = 1
    # while n < len(data):
    #     for i in range(len(data) - n):
    #         if data[i] < data[i + 1]:
    #             data[i], data[i + 1] = data[i + 1], data[i]
    #     n += 1

    # улучшенный вариант без использования переменной n
    for n in range(len(data)-1, 0, -1):
        for i in range(n):
            if data[i] < data[i + 1]:
                data[i], data[i + 1] = data[i + 1], data[i]

    return data


if __name__ == "__main__":
    num = 30
    array = [random.randint(-100, 99) for _ in range(num)]
    print(array)
    print(my_bubble_sort(array))
